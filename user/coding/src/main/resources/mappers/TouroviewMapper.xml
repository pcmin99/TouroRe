<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- *************************** dao interface 경로+이름 -->
<mapper namespace="com.example.coding.dao.TouroviewDAO">

<!-- List-->
<select id="getTourByNum" parameterType="String" resultType="TourVO">
    SELECT  * 
    FROM    tour
    WHERE   tour_num = #{tourNum}
</select>

<!-- 검색어 -->
<select id="searchByKeyword" resultType="TouroviewVO">
    SELECT  *
    FROM    touroview
    <where>
        <if test="keyword != null and keyword.length() >= 2">
            AND touroview_title LIKE CONCAT('%', #{keyword}, '%') OR touroview_content LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
</select>

<!-- 페이징 -->
<select id="countItemsByKeyword" resultType="int">
    SELECT COUNT(*)
    FROM touroview
    <where>
        <if test="keyword != null and keyword.length() >= 2">
            AND (touroview_title LIKE CONCAT('%', #{keyword}, '%') OR 
                 touroview_content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </where>
</select>

<!-- 인기 게시물 -->
<select id="getPopularTouroview" resultType="LikeVO">
    SELECT t.touroview_num, t.user_id, t.touroview_title, t.touroview_regdate, t.touroview_content, COUNT(l.like_num) as like_count
    FROM touroview t
    LEFT JOIN `like` l ON t.touroview_num = l.touroview_num
    GROUP BY t.touroview_num, t.user_id, t.touroview_title, t.touroview_regdate, t.touroview_content
    ORDER BY like_count DESC
</select>







<!-- touroview_insert-->
<!-- 후기 게시물 db저장-->
<insert id="saveTouroview">
    INSERT  INTO touroview (user_id, tour_num, touroview_title, touroview_regdate, touroview_update, touroview_content)
    VALUES  (#{user_id}, #{tour_num}, #{touroview_title}, NOW(), NOW(), #{touroview_content});
</insert>
  
<!-- 여행친구찾기 이름 찾기 -->
<select id="selectViewNum" resultType="int">
    SELECT  touroview_num
    FROM    touroview
    ORDER   BY touroview_num DESC LIMIT 1
</select>



<!-- touroview_detail-->
<!-- detail페이지 db 목록 불러오기-->
<select id="getTouroviewList" resultType="TouroviewVO" parameterType="String">
    
    SELECT tv.*
    FROM touroview tv
    LEFT OUTER JOIN report r ON tv.touroview_num = r.touroview_num
    
    <where>
        <if test="keyword != null and keyword.length() >= 2">
            AND touroview_title LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
    GROUP BY tv.touroview_num
    HAVING COUNT(r.report_count) <![CDATA[<]]> 3;
</select>

<!-- 모든 페이지 수 가져오기-->
<select id="getTotalPages" resultType="int">
    SELECT  COUNT(*)
    FROM    touroview;
</select>

<!-- insert 여행지 검색-->
<select id="findByKeyword" parameterType="TourVO" resultType="TourVO">
    SELECT  * 
    FROM    tour
    WHERE   tour_name LIKE CONCAT('%', #{keyword}, '%') OR tour_addr LIKE CONCAT('%', #{keyword}, '%');
</select>

<!-- TourVO에서 여행지 우편번호, 주소 받아오기 -->
<select id="getTourById" resultType="TourVO">
    SELECT  *
    FROM    tour
    WHERE   tour_num = #{tour_num}
</select>

<select id="getUserByTouroviewId" resultType="UserVO">
    SELECT  *
    FROM    user
    WHERE   user_id = #{userId}
</select>

<!-- detail (TouroviewVO) 페이지 -->
<select id="getTouroviewById" resultType="TouroviewVO">
    SELECT  * 
    FROM    touroview tvw
    INNER JOIN `USER` us
    ON tvw.user_id = us.user_id
    WHERE   touroview_num = #{touroview_num}
</select>

<!-- 여행지 번호를 이용하여 해당 여행지(TourVO) 정보를 가져오기 -->
<select id="getTourByTouroviewId" resultType="TourVO">
    SELECT  * 
    FROM    tour 
    WHERE   tour_num = #{touroview_num}
</select>

<!-- 신고 횟수 조회 -->
<!-- 신고 -->
<insert id="insertReportCount">
    INSERT  INTO report(touroview_num, user_id, report_count)
    VALUES  (#{touroview_num}, #{user_id}, 1)
</insert>

<!-- 신고한 게시물인지 확인 -->
<select id="checkReported" resultType="int">
    SELECT  COUNT(*)
    FROM    report
    WHERE   touroview_num = #{touroview_num} AND user_id = #{userId}
</select>


<!-- 사용자 정보 가져오기 -->
<select id="getUserById" resultType="UserVO">
    SELECT  * 
    FROM    user 
    WHERE   user_id = #{userId}
</select>



<!-- touroview_update_delete-->
<!-- 게시물 수정-->
<update id="updateTouroview" parameterType="TouroviewVO">
    UPDATE  touroview
    SET     tour_num = #{tour_num},
            touroview_title = #{touroview_title},
            touroview_content = #{touroview_content},
            touroview_update = NOW()
    WHERE   touroview_num = #{touroview_num}
</update>


 <!-- 이미지 정보 업데이트 -->
<update id="updateImgDetail" parameterType="ImgVO">
    UPDATE  img
    SET     img_name = #{img_name},
            img_real_name = #{img_real_name},
            img_path = #{img_path}
    WHERE   touroview_num   = #{touroview_num}
</update>


<!-- 게시물 삭제-->
<delete id="deleteTouroview" parameterType="int">
    DELETE  FROM touroview
    WHERE   touroview_num = #{touroview_num}
</delete>

<!-- 디테일 게시물 기본 배경화면 가져오기 -->
<select id="getTouroviewImg" parameterType="int" resultType="TouroviewDetailVO">
    SELECT  * 
    FROM    tour t INNER JOIN touroview t2 ON t.tour_num = t2.tour_num 
    WHERE   t.tour_num = #{tour_num}
</select>

<!-- 디테일 게시물 여러 이미지 3개 가져오기 -->
<select id="detailviewImg" parameterType="int" resultType="TouroviewDetailVO">
    SELECT *
    FROM   img_detail id INNER JOIN img i ON id.img_num = i.img_num 
    WHERE  id.touroview_num = #{touroview_num}
</select>

<!-- 좋아요 추가 -->
 <insert id="addWishList" parameterType="LikeVO">
    INSERT  INTO `like` (touroview_num, user_id, like_count, touro_mate_num)
    VALUES  (#{touroview_num}, #{user_id}, '1', NULL)
</insert>

<!-- 좋아요 확인 -->
<select id="ckWishList" resultType="int" parameterType="LikeVO">
    SELECT  count(*) 
    FROM `like` 
    WHERE user_id = #{user_id} AND touroview_num = #{touroview_num}
</select>

<!-- 좋아요 삭제 -->
<delete id="deleteWishList" parameterType="LikeVO">
    DELETE FROM `like` 
    WHERE user_id = #{user_id} AND touroview_num = #{touroview_num}
</delete>

<!-- Touroview 에서 tour 가져오기-->
<select id="getTourNameByTourNum" parameterType="String" resultType="TourVO">
    SELECT  * 
    FROM    tour 
    WHERE   tour_num = #{tour_num}
</select>


</mapper>
