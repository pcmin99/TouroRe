<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.coding.dao.TourListDAO">


<!-- order by tour_star 에서 tour_num으로 변경
	별점 기반 정렬을 구현된 기능이며
	db 에서 index 사용을 위해 tour_star 생성도 고민했지만
	별점은 자주 바뀌는 값이라고 생각되어 -> primary key로 order 변경
	1. 데이터가 어느정도 있는 상황에서 번호가 바뀔 확률 X
	2. 생성되더라도 가장 적게 생성될 확률
	3. explain으로 index 사용하는 것 확인 완료
-->
<select id="selectAll" resultType="com.example.coding.domain.TourVO" parameterType="com.example.coding.domain.Search">
	SELECT *
	FROM tour 
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="tour_cate_code != null and tour_cate_code != '' ">
			AND tour_cate_code like #{tour_cate_code}
		</if>
		<if test="loc_cate_code != null and loc_cate_code[0] != '' ">
			AND loc_cate_code in
			<foreach collection="loc_cate_code" item="cate_data" open="(" close=")" separator=",">
				#{cate_data}
			</foreach>
		</if>
		<if test="keyword != null and keyword != '' ">
			AND (tour_name like CONCAT('%',#{keyword},'%') OR tour_content like CONCAT('%',#{keyword},'%'))
		</if>
		<if test="tour_star != null and tour_star[0] != '' ">
		AND (
			<foreach collection="tour_star" item="star_data" open="(" close=")" separator=" OR ">
		 tour_star <![CDATA[ <= ]]>#{star_data} AND tour_star <![CDATA[ >= ]]>(#{star_data}
		 <choose>
		 	<when test="star_data == 1.0"> -1 </when>
		 	<otherwise> -0.99 </otherwise>
		 </choose>
		)
			</foreach>
		)
		</if>
	</trim>
	ORDER BY tour_num DESC
	LIMIT #{startList}, #{listSize}
</select>


<select id="tourListCnt" resultType="int" parameterType="com.example.coding.domain.Search">
		SELECT count(*) as listCnt
		FROM tour
		<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="tour_cate_code != null and tour_cate_code != '' "> 
		AND tour_cate_code like #{tour_cate_code}
		</if>
		<if test="loc_cate_code != null and loc_cate_code[0] != '' "> 
		AND loc_cate_code in
			<foreach collection="loc_cate_code" item="cate_data" open="(" close=")" separator=",">
			#{cate_data}
			</foreach>
		</if>
		<if test="keyword != null and keyword != '' "> 
		AND (tour_name like CONCAT('%',#{keyword},'%') OR tour_content like CONCAT('%',#{keyword},'%'))
		</if>
		<if test="tour_star != null and tour_star[0] != '' ">
		AND
			<foreach collection="tour_star" item="star_data" open="(" close=")" separator="OR">
		 tour_star <![CDATA[ <= ]]>#{star_data} AND tour_star <![CDATA[ >= ]]>(#{star_data}
		 <choose>
		 	<when test="star_data == 1.0"> -1 </when>
		 	<otherwise> -0.99 </otherwise>
		 </choose>
		)
			</foreach>
		</if>
		</trim>
</select>

<!--index 타입 const으로 확인 완료	-->
<select id="selectOne" resultType="com.example.coding.domain.TourVO" parameterType="com.example.coding.domain.TourVO">
	SELECT * 
	FROM tour 
	WHERE tour_num=#{tour_num} 
</select>


<insert id="addWishListById" parameterType="com.example.coding.domain.WishListVO">
	INSERT INTO wishlist (user_id, tour_num)
	VALUES (#{user_id}, #{tour_num})
</insert>


<select id="ckWishListById" resultType="int" parameterType="com.example.coding.domain.WishListVO">
	SELECT * 
	FROM wishlist 
	WHERE user_id = #{user_id} AND tour_num = #{tour_num}
</select>

<delete id="deleteWishListById" parameterType="com.example.coding.domain.WishListVO">
	DELETE FROM wishlist 
	WHERE user_id = #{user_id} AND tour_num = #{tour_num}
</delete>

<insert id="newInquiry" parameterType="com.example.coding.domain.InquiryVO">
	INSERT INTO inquiry (inquiry_title, inquiry_content, user_id, tour_num, inquiry_process, inquiry_regdate)
	VALUES (#{inquiry_title}, #{inquiry_content}, #{user_id}, #{tour_num}, 0, NOW())
</insert>

<update id="incTourInquiry_num" parameterType="com.example.coding.domain.TourVO">
	UPDATE tour SET inquiry_count = #{inquiry_count} + 1
	WHERE tour_num=#{tour_num}
</update>

</mapper>